---
version: '3'
vars:
  SEMVER: 'v0.10.0'

includes:
  containers:
    taskfile: ./.dagger-ci/Taskfile.yml
    dir: ./.dagger-ci
    optional: true
  examples:
    taskfile: ./tests/Taskfile.yml
    optional: true
    vars:
      SEMVER: '{{.SEMVER}}'

tasks:
  build-go-binary:
    desc: Template task to build a go binary
    dir: action
    cmds:
      - go build -ldflags="-s -w" -o ../bin/firmware-action-{{OS}}-{{ARCH}}-{{.SEMVER}}
    env:
      CGO_ENABLED: 0
    sources:
      - ./**/*.go
    generates:
      - ../bin/firmware-action-{{OS}}-{{ARCH}}-{{.SEMVER}}

  lint:
    desc: Run the linters
    dir: action
    cmds:
      - revive ./...
      - go vet ./...
      - staticcheck -fail "" ./...
      - golangci-lint run --issues-exit-code 0 ./...

  format:
    desc: Run gofumt (fork of gofmt, stricter)
    cmds:
      - gofumpt -w action

  test:
    desc: Run tests
    dir: action
    cmds:
      - go test {{.CLI_ARGS}} -race -timeout 60m -shuffle=on -covermode=atomic -coverprofile coverage.out ./...
      - go tool cover -func=coverage.out
      - go tool cover -html=coverage.out -o coverage.html

  godocs:
    desc: Start godocs http server
    dir: action
    cmds:
      - godoc -http=:6060

  build-mdbook:
    desc: Build mdBook
    dir: docs
    cmds:
      - mdbook build

  build-mdbook-watch:
    desc: Build mdBook with watch
    dir: docs
    cmds:
      - mdbook watch

  merge-json-configs:
    desc: Merge all json configuration files in tests directory (for Docs purposes)
    dir: tests
    cmds:
      - jq -s 'reduce .[] as $item ({}; . * $item)' example_config__*.json > example_config.json
