---
version: '3'
vars:
  VERSION:
    sh: git describe --tags --always --abbrev=8 | sed -E 's/^v//g'
    # strip the 'v' prefix to match behaviour of goreleaser
  COMMIT:
    sh: git rev-parse --short HEAD
  DATE:
    sh: date --rfc-3339=seconds | sed 's/ /T/' | sed 's/+/Z/'
  GOLANG_CODE_PATH: 'cmd/firmware-action'

includes:
  containers:
    taskfile: ./.dagger-ci/Taskfile.yml
    dir: ./.dagger-ci
    optional: true
  examples:
    taskfile: ./tests/Taskfile.yml
    optional: true
    vars:
      VERSION: 'v{{.VERSION}}'

tasks:
  build-go-binary:
    desc: Template task to build a go binary
    dir: '{{.GOLANG_CODE_PATH}}'
    cmds:
      - go build -ldflags="-s -w -X main.version={{.VERSION}} -X main.commit={{.COMMIT}} -X main.date={{.DATE}}" -o ../../bin/firmware-action-{{OS}}-{{ARCH}}-v{{.VERSION}}
      - ln -sf ./firmware-action-{{OS}}-{{ARCH}}-v{{.VERSION}} ../../bin/firmware-action
    env:
      CGO_ENABLED: 0
    sources:
      - ./**/*.go
    generates:
      - ../../bin/firmware-action-{{OS}}-{{ARCH}}-v{{.VERSION}}

  lint:
    desc: Run the linters
    dir: '{{.GOLANG_CODE_PATH}}'
    cmds:
      - revive ./...
      - go vet ./...
      - staticcheck -fail "" ./...
      - golangci-lint run --issues-exit-code 0 ./...

  format:
    desc: Run gofumt (fork of gofmt, stricter)
    cmds:
      - gofumpt -w '{{.GOLANG_CODE_PATH}}'

  test:
    desc: Run tests
    dir: '{{.GOLANG_CODE_PATH}}'
    cmds:
      - go test {{.CLI_ARGS}} -race -timeout 60m -shuffle=on -covermode=atomic -coverprofile coverage.out ./...
      - go tool cover -func=coverage.out
      - go tool cover -html=coverage.out -o coverage.html

  godocs:
    desc: Start godocs http server
    dir: '{{.GOLANG_CODE_PATH}}'
    cmds:
      - godoc -http=:6060

  build-mdbook:
    desc: Build mdBook
    dir: docs
    cmds:
      - mdbook build
      - echo "Visit file://{{.USER_WORKING_DIR}}/docs/public/index.html"

  build-mdbook-watch:
    desc: Build mdBook with watch
    dir: docs
    cmds:
      - mdbook watch

  merge-json-configs:
    desc: Merge all json configuration files in tests directory (for Docs purposes)
    dir: tests
    cmds:
      - jq -s 'reduce .[] as $item ({}; . * $item)' example_config__*.json > example_config.json
