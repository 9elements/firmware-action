---
# Test built docker images by building simple projects inside them

name: go test
on:
  pull_request:
  pull_request_review:
    types: ['submitted']
  merge_group:
  push:
    branches: ['main']
    tags: ['v*']

permissions:
  contents: read

jobs:
  go-test-resource-hogs:
    # Run tests that take up a lot of system resources separately
    runs-on: ubuntu-latest
    strategy:
      matrix:
        testregex: ['TestLinux', 'TestEdk2', 'TestCoreboot', 'TestStitching']
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Install Taskfile
        run: |
          sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d
      - name: Install go dependencies
        run: |
          cd action
          go get -d ./...
      - name: Run go test
        run: |
          cd action
          go test -race -v -timeout 60m -shuffle=on -covermode=atomic -coverprofile coverage.out -run ${{ matrix.testregex }} ./...

  go-test:
    # Run all remaining light tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Install Taskfile
        run: |
          sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d
      - name: Install go dependencies
        run: |
          cd action
          go get -d ./...
      - name: Run go test
        run: |
          cd action
          go test -race -v -timeout 60m -shuffle=on -covermode=atomic -coverprofile coverage.out -skip '(TestLinux|TestEdk2|TestCoreboot|TestStitching)' ./...
