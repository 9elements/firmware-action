---
# Update versions and create release PR
# Source: https://www.thisdot.co/blog/tag-and-release-your-project-with-github-actions-workflows
#         https://goreleaser.com/ci/actions/#tag-fetching
#
# - Manually triggered "release-prepare.yml" workflow will create a PR
#   - This PR will do some minor tweaks to ready for release (such as increment the version across files)
# - Upon merging the PR, "release" job defined here will trigger, which will:
#   - create a tag
#   - do the actual release with goreleaser

name: release
on:
  pull_request:
    types:
      - closed

permissions:
  contents: write  # To create a new release

jobs:
  release:
    runs-on: ubuntu-latest
    if: startsWith(github.event.pull_request.title, 'Release:') && github.event.pull_request.merged == true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'
      - name: Install dependencies
        run: npm install

      - name: Set up Git
        run: |
          git config user.name "Release bot"
          git config user.email "releasebot@noreply.com"
      - name: Get current version
        id: get_version
        run: |
          git branch --show-current
          git pull
          echo "version=v$(npm pkg get version | tr -d '\"')" >> "${GITHUB_OUTPUT}"

      - name: Create tag
        run: |
          NEXT_VERSION=${{ steps.get_version.outputs.version }}
          git pull
          git tag -a "${NEXT_VERSION}" -m "${NEXT_VERSION}"
          git push --follow-tags
          git checkout "${NEXT_VERSION}"

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          workdir: action
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
