---
# Build and deploy documentation
#
# Sample workflow for building and deploying a mdBook site to GitHub Pages
#
# To get started with mdBook see: https://rust-lang.github.io/mdBook/index.html
#
name: mdbook

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['main']
    tags: ['v*']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

env:
  CARGO_TARGET_DIR: mdbook-bin

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: 'recursive'

      - name: Restore cached mdbook cargo stuff
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cargo/registry/
            ~/.cargo/git/
            ${{ env.CARGO_TARGET_DIR }}
          key: mdbook-cache
          restore-keys: |
            mdbook-
            mdbook

      - name: Install mdBook
        run: |
          echo "::group::curl rustup"
          curl --proto '=https' --tlsv1.2 https://sh.rustup.rs --show-error --silent --fail --speed-limit 300 --speed-time 10 -y | sh
          rustup update
          # Cleanup cache
          cargo install cargo-cache --no-default-features --features ci-autoclean cargo-cache
          cargo cache
          echo "::endgroup::"

          # Install mdbook with plugins
          echo "::group::cargo install mdbook"
          cargo install \
            mdbook \
            mdbook-admonish \
            mdbook-footnote \
            mdbook-katex \
            mdbook-pagetoc \
            mdbook-template \
            mdbook-toc
          echo "::endgroup::"

      - name: Store mdbook cargo stuff
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.cargo/registry/
            ~/.cargo/git/
            ${{ env.CARGO_TARGET_DIR }}
          key: mdbook-cache

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with mdBook
        run: |
          cd docs
          mdbook build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
