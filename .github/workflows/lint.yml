---
# Run linters

name: lint
on:
  pull_request:
  pull_request_review:
    types: ['submitted']
  merge_group:
  push:
    branches: ['main']
    tags: ['v*']

env:
  APPLY_FIXES: none
  APPLY_FIXES_EVENT: pull_request
  APPLY_FIXES_MODE: commit
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}-${{ github.event_name }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  commit-lint:
    runs-on: ubuntu-latest
    if: ${{ ! (github.event_name == 'pull_request_review' && github.actor != 'github-actions[bot]') }}
    # Skip if pull_request_review on PR not made by a bot
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Commit-Lint
        uses: wagoid/commitlint-github-action@v6
        with:
          configFile: .commitlint.config.mjs
  megalinter:
    runs-on: ubuntu-latest
    if: ${{ ! (github.event_name == 'pull_request_review' && github.actor != 'github-actions[bot]') }}
    # Skip if pull_request_review on PR not made by a bot
    permissions:
      contents: read
      # Needed by GitHub Comment Reporter:
      issues: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: MegaLinter
        uses: oxsecurity/megalinter/flavors/cupcake@v8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: true
  golangci-lint:
    runs-on: ubuntu-latest
    if: ${{ ! (github.event_name == 'pull_request_review' && github.actor != 'github-actions[bot]') }}
    # Skip if pull_request_review on PR not made by a bot
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          working-directory: cmd/firmware-action

  goreleaser-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Check goreleaser configuration
        uses: goreleaser/goreleaser-action@v6
        with:
          args: check
          workdir: cmd/firmware-action
